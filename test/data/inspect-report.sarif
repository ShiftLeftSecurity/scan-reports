{
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "ShiftLeft Inspect deep analyzer",
          "rules": [
            {
              "id": "a1-injection",
              "help": {
                "text": "Attacker controlled data is used in a shell command without undergoing escaping or validation. This could allow an attacker to execute code on the server. Injection flaws occur when untrusted data is sent to an interpreter as part of a command or query. By injecting hostile data, an attacker may trick the interpreter into executing unintended commands or accessing data without authorization which can result in data loss, corruption, or disclosure to unauthorized parties, loss of accountability, denial of access or even a complete host takeover.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by using parameterized queries or by validating HTTP data (preferably on server-side by means of common input sanitation libraries or whitelisting) before using it.\n\n## Additional information\n\n**[CWE-77](https://cwe.mitre.org/data/definitions/77.html)**\n\n**[CWE-78](https://cwe.mitre.org/data/definitions/78.html)**\n\n**[CWE-917](https://cwe.mitre.org/data/definitions/917.html)**\n\n**[OWASP-A1](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A1-Injection)**.",
                "markdown": "Attacker controlled data is used in a shell command without undergoing escaping or validation. This could allow an attacker to execute code on the server. Injection flaws occur when untrusted data is sent to an interpreter as part of a command or query. By injecting hostile data, an attacker may trick the interpreter into executing unintended commands or accessing data without authorization which can result in data loss, corruption, or disclosure to unauthorized parties, loss of accountability, denial of access or even a complete host takeover.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by using parameterized queries or by validating HTTP data (preferably on server-side by means of common input sanitation libraries or whitelisting) before using it.\n\n## Additional information\n\n**[CWE-77](https://cwe.mitre.org/data/definitions/77.html)**\n\n**[CWE-78](https://cwe.mitre.org/data/definitions/78.html)**\n\n**[CWE-917](https://cwe.mitre.org/data/definitions/917.html)**\n\n**[OWASP-A1](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A1-Injection)**."
              },
              "name": "Remote Code Execution: Command Injection through attacker-controlled data via `foo` in `SearchController.doGetSearch`",
              "properties": {
                "tags": [
                  "ShiftLeft",
                  "Inspect"
                ],
                "precision": "very-high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Attacker controlled data is used in a shell command without undergoing escaping or validation. This could allow an attacker to execute code on the server. Injection flaws occur when untrusted data is sent to an interpreter as part of a command or query. By injecting hostile data, an attacker may trick the interpreter into executing unintended commands or accessing data without authorization which can result in data loss, corruption, or disclosure to unauthorized parties, loss of accountability, denial of access or even a complete host takeover."
              },
              "helpUri": "https://stackoverflow.com/search?q=shiftleft/sast-scan+inspect+a1-injection+Remote Code Execution: Command Injection through attacker-controlled data via `foo` in `SearchController.doGetSearch`",
              "shortDescription": {
                "text": "Remote Code Execution: Command Injection through attacker-controlled data via `foo` in `SearchController.doGetSearch`."
              }
            },
            {
              "id": "a3-sensitive-data-exposure",
              "help": {
                "text": "Sensitive data leak detected in this flow. This data may be visible to a third party that has access to the logs, such as system administrators. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by not writing sensitive data to the log or by encrypting it in advance.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[CWE-117](https://cwe.mitre.org/data/definitions/117.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**.",
                "markdown": "Sensitive data leak detected in this flow. This data may be visible to a third party that has access to the logs, such as system administrators. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by not writing sensitive data to the log or by encrypting it in advance.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[CWE-117](https://cwe.mitre.org/data/definitions/117.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**."
              },
              "name": "Sensitive Data Leak: Sensitive data is leaked to log in `AccountController.withdrawFromAccount`",
              "properties": {
                "tags": [
                  "ShiftLeft",
                  "Inspect"
                ],
                "precision": "very-high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Sensitive data leak detected in this flow. This data may be visible to a third party that has access to the logs, such as system administrators. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes."
              },
              "helpUri": "https://stackoverflow.com/search?q=shiftleft/sast-scan+inspect+a3-sensitive-data-exposure+Sensitive Data Leak: Sensitive data is leaked to log in `AccountController.withdrawFromAccount`",
              "shortDescription": {
                "text": "Sensitive Data Leak: Sensitive data is leaked to log in `AccountController.withdrawFromAccount`."
              }
            },
            {
              "id": "a8-deserialization",
              "help": {
                "text": "HTTP Request parameter are deserialized and not escaped. An attacker may be able to trick the system into using malicious, potentially harmful data. As a result the attacker may be able to attack the integrity of the system or remotely execute code on the system.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by validating HTTP data before it is deserialized.\n\n## Additional information\n\n**[CWE-502](https://cwe.mitre.org/data/definitions/502.html)**\n\n**[OWASP-A8](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A8-Insecure_Deserialization)**.",
                "markdown": "HTTP Request parameter are deserialized and not escaped. An attacker may be able to trick the system into using malicious, potentially harmful data. As a result the attacker may be able to attack the integrity of the system or remotely execute code on the system.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by validating HTTP data before it is deserialized.\n\n## Additional information\n\n**[CWE-502](https://cwe.mitre.org/data/definitions/502.html)**\n\n**[OWASP-A8](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A8-Insecure_Deserialization)**."
              },
              "name": "Deserialization: Deserialization of HTTP data via `request` in `AdminController.doGetPrintSecrets`",
              "properties": {
                "tags": [
                  "ShiftLeft",
                  "Inspect"
                ],
                "precision": "very-high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "HTTP Request parameter are deserialized and not escaped. An attacker may be able to trick the system into using malicious, potentially harmful data. As a result the attacker may be able to attack the integrity of the system or remotely execute code on the system."
              },
              "helpUri": "https://stackoverflow.com/search?q=shiftleft/sast-scan+inspect+a8-deserialization+Deserialization: Deserialization of HTTP data via `request` in `AdminController.doGetPrintSecrets`",
              "shortDescription": {
                "text": "Deserialization: Deserialization of HTTP data via `request` in `AdminController.doGetPrintSecrets`."
              }
            },
            {
              "id": "a7-XSS",
              "help": {
                "text": "Data from HTTP request parameters is used in HTML or session information. Unless the string is validated, this may result in a XSS attack.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by using input sanitization/validation techniques (e.g., whitelisting) on the HTTP data before using it inside another HTTP header.\n\n## Additional information\n\n**[CWE-79](https://cwe.mitre.org/data/definitions/79.html)**\n\n**[OWASP-A7](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A7-Cross-Site_Scripting_(XSS))**.",
                "markdown": "Data from HTTP request parameters is used in HTML or session information. Unless the string is validated, this may result in a XSS attack.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by using input sanitization/validation techniques (e.g., whitelisting) on the HTTP data before using it inside another HTTP header.\n\n## Additional information\n\n**[CWE-79](https://cwe.mitre.org/data/definitions/79.html)**\n\n**[OWASP-A7](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A7-Cross-Site_Scripting_(XSS))**."
              },
              "name": "XSS: HTTP data to HTML via `clientId` in `CustomerController.debug`",
              "properties": {
                "tags": [
                  "ShiftLeft",
                  "Inspect"
                ],
                "precision": "very-high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Data from HTTP request parameters is used in HTML or session information. Unless the string is validated, this may result in a XSS attack."
              },
              "helpUri": "https://stackoverflow.com/search?q=shiftleft/sast-scan+inspect+a7-XSS+XSS: HTTP data to HTML via `clientId` in `CustomerController.debug`",
              "shortDescription": {
                "text": "XSS: HTTP data to HTML via `clientId` in `CustomerController.debug`."
              }
            },
            {
              "id": "a5-broken-access-control",
              "help": {
                "text": "Data from HTTP methods is not escaped, hashed or encoded and used as a file name in this flow. This indicates a directory traversal or an arbitrary file write. Injection flaws occur when untrusted data is sent to an interpreter as part of a command or query. By injecting hostile data, an attacker may trick the interpreter into executing unintended commands or accessing data without authorization which can result in data loss, corruption, or disclosure to unauthorized parties, loss of accountability, denial of access or even a complete host takeover.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by validating HTTP data (preferably on server-side by means of common input sanitation libraries or whitelisting) before using it (e.g., ensure that attackers cannot arbitrarily access files by defining file paths through HTTP requests).\n\n## Additional information\n\n**[CWE-22](https://cwe.mitre.org/data/definitions/22.html)**\n\n**[OWASP-A5](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A5-Broken_Access_Control)**.",
                "markdown": "Data from HTTP methods is not escaped, hashed or encoded and used as a file name in this flow. This indicates a directory traversal or an arbitrary file write. Injection flaws occur when untrusted data is sent to an interpreter as part of a command or query. By injecting hostile data, an attacker may trick the interpreter into executing unintended commands or accessing data without authorization which can result in data loss, corruption, or disclosure to unauthorized parties, loss of accountability, denial of access or even a complete host takeover.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by validating HTTP data (preferably on server-side by means of common input sanitation libraries or whitelisting) before using it (e.g., ensure that attackers cannot arbitrarily access files by defining file paths through HTTP requests).\n\n## Additional information\n\n**[CWE-22](https://cwe.mitre.org/data/definitions/22.html)**\n\n**[OWASP-A5](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A5-Broken_Access_Control)**."
              },
              "name": "Directory Traversal: HTTP data as file path via `request` in `CustomerController.saveSettings`",
              "properties": {
                "tags": [
                  "ShiftLeft",
                  "Inspect"
                ],
                "precision": "very-high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Data from HTTP methods is not escaped, hashed or encoded and used as a file name in this flow. This indicates a directory traversal or an arbitrary file write. Injection flaws occur when untrusted data is sent to an interpreter as part of a command or query. By injecting hostile data, an attacker may trick the interpreter into executing unintended commands or accessing data without authorization which can result in data loss, corruption, or disclosure to unauthorized parties, loss of accountability, denial of access or even a complete host takeover."
              },
              "helpUri": "https://stackoverflow.com/search?q=shiftleft/sast-scan+inspect+a5-broken-access-control+Directory Traversal: HTTP data as file path via `request` in `CustomerController.saveSettings`",
              "shortDescription": {
                "text": "Directory Traversal: HTTP data as file path via `request` in `CustomerController.saveSettings`."
              }
            },
            {
              "id": "a3-cross-site-scripting",
              "help": {
                "text": "Attacker controlled sensitive data is not escaped and inserted into a database in this flow. This can lead to a stored cross site scripting (XSS) attack. Unescaped javascript is stored in the database and will be send to the client and executed in the browser every time a certain page is requested. This can result in stealing sessions and maybe credentials of the user.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by escaping data before returned to the user.",
                "markdown": "Attacker controlled sensitive data is not escaped and inserted into a database in this flow. This can lead to a stored cross site scripting (XSS) attack. Unescaped javascript is stored in the database and will be send to the client and executed in the browser every time a certain page is requested. This can result in stealing sessions and maybe credentials of the user.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by escaping data before returned to the user."
              },
              "name": "XSS: Attacker controlled, sensitive data to DB via `customer` in `CustomerController.createCustomer`",
              "properties": {
                "tags": [
                  "ShiftLeft",
                  "Inspect"
                ],
                "precision": "very-high"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Attacker controlled sensitive data is not escaped and inserted into a database in this flow. This can lead to a stored cross site scripting (XSS) attack. Unescaped javascript is stored in the database and will be send to the client and executed in the browser every time a certain page is requested. This can result in stealing sessions and maybe credentials of the user."
              },
              "helpUri": "https://stackoverflow.com/search?q=shiftleft/sast-scan+inspect+a3-cross-site-scripting+XSS: Attacker controlled, sensitive data to DB via `customer` in `CustomerController.createCustomer`",
              "shortDescription": {
                "text": "XSS: Attacker controlled, sensitive data to DB via `customer` in `CustomerController.createCustomer`."
              }
            },
            {
              "id": "a2-broken-authentication",
              "help": {
                "text": "HTTP data is used as session attribute without undergoing escaping or validation. Injection flaws occur when untrusted data is sent to an interpreter as part of a command or query. By injecting hostile data, an attacker may trick the interpreter into executing unintended commands or accessing data without authorization which can result in data loss, corruption, or disclosure to unauthorized parties, loss of accountability, denial of access or even a complete host takeover.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by sanitizing and validating the HTTP data before storing it as session attribute.\n\n## Additional information\n\n**[CWE-384](https://cwe.mitre.org/data/definitions/384.html)**\n\n**[OWASP-A2](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A2-Broken_Authentication)**.",
                "markdown": "HTTP data is used as session attribute without undergoing escaping or validation. Injection flaws occur when untrusted data is sent to an interpreter as part of a command or query. By injecting hostile data, an attacker may trick the interpreter into executing unintended commands or accessing data without authorization which can result in data loss, corruption, or disclosure to unauthorized parties, loss of accountability, denial of access or even a complete host takeover.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by sanitizing and validating the HTTP data before storing it as session attribute.\n\n## Additional information\n\n**[CWE-384](https://cwe.mitre.org/data/definitions/384.html)**\n\n**[OWASP-A2](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A2-Broken_Authentication)**."
              },
              "name": "Session Injection: HTTP data to session attribute via `auth` in `AdminController.doPostLogin`",
              "properties": {
                "tags": [
                  "ShiftLeft",
                  "Inspect"
                ],
                "precision": "very-high"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "HTTP data is used as session attribute without undergoing escaping or validation. Injection flaws occur when untrusted data is sent to an interpreter as part of a command or query. By injecting hostile data, an attacker may trick the interpreter into executing unintended commands or accessing data without authorization which can result in data loss, corruption, or disclosure to unauthorized parties, loss of accountability, denial of access or even a complete host takeover."
              },
              "helpUri": "https://stackoverflow.com/search?q=shiftleft/sast-scan+inspect+a2-broken-authentication+Session Injection: HTTP data to session attribute via `auth` in `AdminController.doPostLogin`",
              "shortDescription": {
                "text": "Session Injection: HTTP data to session attribute via `auth` in `AdminController.doPostLogin`."
              }
            }
          ]
        }
      },
      "conversion": {
        "tool": {
          "driver": {
            "name": "@ShiftLeft/sast-scan"
          }
        },
        "invocation": {
          "arguments": [
            "analyze",
            "--no-auto-update",
            "--wait",
            "--java",
            "--app",
            "HelloShiftLeft",
            "--git-remote-name",
            "https://github.com/ShiftLeftSecurity/HelloShiftLeft",
            "--tag",
            "branch=34012be2ce64b2bddff9b1a745440ef0b2a9afb3",
            "/app/target/hello-shiftleft-0.0.1.jar"
          ],
          "executionSuccessful": true,
          "commandLine": "analyze --no-auto-update --wait --java --app HelloShiftLeft --git-remote-name https://github.com/ShiftLeftSecurity/HelloShiftLeft --tag branch=34012be2ce64b2bddff9b1a745440ef0b2a9afb3 /app/target/hello-shiftleft-0.0.1.jar",
          "endTimeUtc": "2020-04-18T20:09:51Z",
          "workingDirectory": {
            "uri": "file:///Users/prabhu/work/ShiftLeft/HelloShiftLeft"
          }
        }
      },
      "invocations": [
        {
          "executionSuccessful": true,
          "endTimeUtc": "2020-04-18T20:09:51Z",
          "workingDirectory": {
            "uri": "file:///Users/prabhu/work/ShiftLeft/HelloShiftLeft"
          }
        }
      ],
      "properties": {
        "metrics": {
          "total": 99,
          "critical": 44,
          "high": 0,
          "medium": 11,
          "low": 44
        }
      },
      "results": [
        {
          "message": {
            "markdown": "Attacker controlled data is used in a shell command without undergoing escaping or validation. This could allow an attacker to execute code on the server. Injection flaws occur when untrusted data is sent to an interpreter as part of a command or query. By injecting hostile data, an attacker may trick the interpreter into executing unintended commands or accessing data without authorization which can result in data loss, corruption, or disclosure to unauthorized parties, loss of accountability, denial of access or even a complete host takeover.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by using parameterized queries or by validating HTTP data (preferably on server-side by means of common input sanitation libraries or whitelisting) before using it.\n\n## Additional information\n\n**[CWE-77](https://cwe.mitre.org/data/definitions/77.html)**\n\n**[CWE-78](https://cwe.mitre.org/data/definitions/78.html)**\n\n**[CWE-917](https://cwe.mitre.org/data/definitions/917.html)**\n\n**[OWASP-A1](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A1-Injection)**.",
            "text": "Attacker controlled data is used in a shell command without undergoing escaping or validation. This could allow an attacker to execute code on the server. Injection flaws occur when untrusted data is sent to an interpreter as part of a command or query. By injecting hostile data, an attacker may trick the interpreter into executing unintended commands or accessing data without authorization which can result in data loss, corruption, or disclosure to unauthorized parties, loss of accountability, denial of access or even a complete host takeover.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by using parameterized queries or by validating HTTP data (preferably on server-side by means of common input sanitation libraries or whitelisting) before using it.\n\n## Additional information\n\n**[CWE-77](https://cwe.mitre.org/data/definitions/77.html)**\n\n**[CWE-78](https://cwe.mitre.org/data/definitions/78.html)**\n\n**[CWE-917](https://cwe.mitre.org/data/definitions/917.html)**\n\n**[OWASP-A1](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A1-Injection)**."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 21
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/controller/SearchController.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "CRITICAL"
          },
          "partialFingerprints": {},
          "ruleId": "a1-injection",
          "ruleIndex": 0
        },
        {
          "message": {
            "markdown": "HTTP data is used in a shell command without undergoing escaping or validation. This could allow an attacker to execute code on the server. Injection flaws occur when untrusted data is sent to an interpreter as part of a command or query. By injecting hostile data, an attacker may trick the interpreter into executing unintended commands or accessing data without authorization which can result in data loss, corruption, or disclosure to unauthorized parties, loss of accountability, denial of access or even a complete host takeover.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by using parameterized queries or by validating HTTP data (preferably on server-side by means of common input sanitation libraries or whitelisting) before using it.\n\n## Additional information\n\n**[CWE-77](https://cwe.mitre.org/data/definitions/77.html)**\n\n**[CWE-78](https://cwe.mitre.org/data/definitions/78.html)**\n\n**[CWE-917](https://cwe.mitre.org/data/definitions/917.html)**\n\n**[OWASP-A1](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A1-Injection)**.",
            "text": "HTTP data is used in a shell command without undergoing escaping or validation. This could allow an attacker to execute code on the server. Injection flaws occur when untrusted data is sent to an interpreter as part of a command or query. By injecting hostile data, an attacker may trick the interpreter into executing unintended commands or accessing data without authorization which can result in data loss, corruption, or disclosure to unauthorized parties, loss of accountability, denial of access or even a complete host takeover.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by using parameterized queries or by validating HTTP data (preferably on server-side by means of common input sanitation libraries or whitelisting) before using it.\n\n## Additional information\n\n**[CWE-77](https://cwe.mitre.org/data/definitions/77.html)**\n\n**[CWE-78](https://cwe.mitre.org/data/definitions/78.html)**\n\n**[CWE-917](https://cwe.mitre.org/data/definitions/917.html)**\n\n**[OWASP-A1](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A1-Injection)**."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 21
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/controller/SearchController.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "CRITICAL"
          },
          "partialFingerprints": {},
          "ruleId": "a1-injection",
          "ruleIndex": 0
        },
        {
          "message": {
            "markdown": "Sensitive data leak detected in this flow. This data may be visible to a third party that has access to the logs, such as system administrators. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by not writing sensitive data to the log or by encrypting it in advance.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[CWE-117](https://cwe.mitre.org/data/definitions/117.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**.",
            "text": "Sensitive data leak detected in this flow. This data may be visible to a third party that has access to the logs, such as system administrators. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by not writing sensitive data to the log or by encrypting it in advance.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[CWE-117](https://cwe.mitre.org/data/definitions/117.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 58
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/controller/AccountController.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "CRITICAL"
          },
          "partialFingerprints": {},
          "ruleId": "a3-sensitive-data-exposure",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "Sensitive data leak detected in this flow. This data may be visible to a third party that has access to the logs, such as system administrators. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by not writing sensitive data to the log or by encrypting it in advance.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[CWE-117](https://cwe.mitre.org/data/definitions/117.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**.",
            "text": "Sensitive data leak detected in this flow. This data may be visible to a third party that has access to the logs, such as system administrators. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by not writing sensitive data to the log or by encrypting it in advance.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[CWE-117](https://cwe.mitre.org/data/definitions/117.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/repository/AccountRepository.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "CRITICAL"
          },
          "partialFingerprints": {},
          "ruleId": "a3-sensitive-data-exposure",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "Sensitive data leak detected in this flow. This data may be visible to a third party that has access to the logs, such as system administrators. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by not writing sensitive data to the log or by encrypting it in advance.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[CWE-117](https://cwe.mitre.org/data/definitions/117.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**.",
            "text": "Sensitive data leak detected in this flow. This data may be visible to a third party that has access to the logs, such as system administrators. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by not writing sensitive data to the log or by encrypting it in advance.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[CWE-117](https://cwe.mitre.org/data/definitions/117.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 34
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/controller/PatientController.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "CRITICAL"
          },
          "partialFingerprints": {},
          "ruleId": "a3-sensitive-data-exposure",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "Sensitive data leak detected in this flow. This data may be visible to a third party that has access to the logs, such as system administrators. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by not writing sensitive data to the log or by encrypting it in advance.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[CWE-117](https://cwe.mitre.org/data/definitions/117.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**.",
            "text": "Sensitive data leak detected in this flow. This data may be visible to a third party that has access to the logs, such as system administrators. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by not writing sensitive data to the log or by encrypting it in advance.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[CWE-117](https://cwe.mitre.org/data/definitions/117.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 57
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/controller/AccountController.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "CRITICAL"
          },
          "partialFingerprints": {},
          "ruleId": "a3-sensitive-data-exposure",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "Sensitive data leak detected in this flow. This data may be visible to a third party that has access to the logs, such as system administrators. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by not writing sensitive data to the log or by encrypting it in advance.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[CWE-117](https://cwe.mitre.org/data/definitions/117.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**.",
            "text": "Sensitive data leak detected in this flow. This data may be visible to a third party that has access to the logs, such as system administrators. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by not writing sensitive data to the log or by encrypting it in advance.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[CWE-117](https://cwe.mitre.org/data/definitions/117.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 31
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/model/Account.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "CRITICAL"
          },
          "partialFingerprints": {},
          "ruleId": "a3-sensitive-data-exposure",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "Sensitive data leak detected in this flow. This data may be visible to a third party that has access to the logs, such as system administrators. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by not writing sensitive data to the log or by encrypting it in advance.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[CWE-117](https://cwe.mitre.org/data/definitions/117.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**.",
            "text": "Sensitive data leak detected in this flow. This data may be visible to a third party that has access to the logs, such as system administrators. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by not writing sensitive data to the log or by encrypting it in advance.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[CWE-117](https://cwe.mitre.org/data/definitions/117.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/repository/AccountRepository.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "CRITICAL"
          },
          "partialFingerprints": {},
          "ruleId": "a3-sensitive-data-exposure",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "Sensitive data leak detected in this flow. This data may be visible to a third party that has access to the logs, such as system administrators. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by not writing sensitive data to the log or by encrypting it in advance.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[CWE-117](https://cwe.mitre.org/data/definitions/117.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**.",
            "text": "Sensitive data leak detected in this flow. This data may be visible to a third party that has access to the logs, such as system administrators. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by not writing sensitive data to the log or by encrypting it in advance.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[CWE-117](https://cwe.mitre.org/data/definitions/117.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 120
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/controller/CustomerController.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "CRITICAL"
          },
          "partialFingerprints": {},
          "ruleId": "a3-sensitive-data-exposure",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "HTTP Request parameter are deserialized and not escaped. An attacker may be able to trick the system into using malicious, potentially harmful data. As a result the attacker may be able to attack the integrity of the system or remotely execute code on the system.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by validating HTTP data before it is deserialized.\n\n## Additional information\n\n**[CWE-502](https://cwe.mitre.org/data/definitions/502.html)**\n\n**[OWASP-A8](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A8-Insecure_Deserialization)**.",
            "text": "HTTP Request parameter are deserialized and not escaped. An attacker may be able to trick the system into using malicious, potentially harmful data. As a result the attacker may be able to attack the integrity of the system or remotely execute code on the system.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by validating HTTP data before it is deserialized.\n\n## Additional information\n\n**[CWE-502](https://cwe.mitre.org/data/definitions/502.html)**\n\n**[OWASP-A8](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A8-Insecure_Deserialization)**."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 53
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/controller/AdminController.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "CRITICAL"
          },
          "partialFingerprints": {},
          "ruleId": "a8-deserialization",
          "ruleIndex": 2
        },
        {
          "message": {
            "markdown": "Sensitive data leak detected in this flow. This data may be visible to a third party that has access to the logs, such as system administrators. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by not writing sensitive data to the log or by encrypting it in advance.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[CWE-117](https://cwe.mitre.org/data/definitions/117.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**.",
            "text": "Sensitive data leak detected in this flow. This data may be visible to a third party that has access to the logs, such as system administrators. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by not writing sensitive data to the log or by encrypting it in advance.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[CWE-117](https://cwe.mitre.org/data/definitions/117.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 31
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/model/Account.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "CRITICAL"
          },
          "partialFingerprints": {},
          "ruleId": "a3-sensitive-data-exposure",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "Data from HTTP request parameters is used in HTML or session information. Unless the string is validated, this may result in a XSS attack.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by using input sanitization/validation techniques (e.g., whitelisting) on the HTTP data before using it inside another HTTP header.\n\n## Additional information\n\n**[CWE-79](https://cwe.mitre.org/data/definitions/79.html)**\n\n**[OWASP-A7](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A7-Cross-Site_Scripting_(XSS))**.",
            "text": "Data from HTTP request parameters is used in HTML or session information. Unless the string is validated, this may result in a XSS attack.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by using input sanitization/validation techniques (e.g., whitelisting) on the HTTP data before using it inside another HTTP header.\n\n## Additional information\n\n**[CWE-79](https://cwe.mitre.org/data/definitions/79.html)**\n\n**[OWASP-A7](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A7-Cross-Site_Scripting_(XSS))**."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 293
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/controller/CustomerController.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "CRITICAL"
          },
          "partialFingerprints": {},
          "ruleId": "a7-XSS",
          "ruleIndex": 3
        },
        {
          "message": {
            "markdown": "Sensitive data leak detected in this flow. This data may be visible to a third party that has access to the logs, such as system administrators. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by not writing sensitive data to the log or by encrypting it in advance.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[CWE-117](https://cwe.mitre.org/data/definitions/117.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**.",
            "text": "Sensitive data leak detected in this flow. This data may be visible to a third party that has access to the logs, such as system administrators. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by not writing sensitive data to the log or by encrypting it in advance.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[CWE-117](https://cwe.mitre.org/data/definitions/117.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/repository/AccountRepository.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "CRITICAL"
          },
          "partialFingerprints": {},
          "ruleId": "a3-sensitive-data-exposure",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "Sensitive data leak detected in this flow. This data may be visible to a third party that has access to the logs, such as system administrators. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by not writing sensitive data to the log or by encrypting it in advance.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[CWE-117](https://cwe.mitre.org/data/definitions/117.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**.",
            "text": "Sensitive data leak detected in this flow. This data may be visible to a third party that has access to the logs, such as system administrators. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by not writing sensitive data to the log or by encrypting it in advance.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[CWE-117](https://cwe.mitre.org/data/definitions/117.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 31
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/model/Account.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "CRITICAL"
          },
          "partialFingerprints": {},
          "ruleId": "a3-sensitive-data-exposure",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "Sensitive data leak detected in this flow. This data may be visible to a third party that has access to the logs, such as system administrators. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by not writing sensitive data to the log or by encrypting it in advance.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[CWE-117](https://cwe.mitre.org/data/definitions/117.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**.",
            "text": "Sensitive data leak detected in this flow. This data may be visible to a third party that has access to the logs, such as system administrators. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by not writing sensitive data to the log or by encrypting it in advance.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[CWE-117](https://cwe.mitre.org/data/definitions/117.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 31
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/model/Account.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "CRITICAL"
          },
          "partialFingerprints": {},
          "ruleId": "a3-sensitive-data-exposure",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "Data from HTTP request parameters is used in HTML or session information. Unless the string is validated, this may result in a XSS attack.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by using input sanitization/validation techniques (e.g., whitelisting) on the HTTP data before using it inside another HTTP header.\n\n## Additional information\n\n**[CWE-79](https://cwe.mitre.org/data/definitions/79.html)**\n\n**[OWASP-A7](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A7-Cross-Site_Scripting_(XSS))**.",
            "text": "Data from HTTP request parameters is used in HTML or session information. Unless the string is validated, this may result in a XSS attack.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by using input sanitization/validation techniques (e.g., whitelisting) on the HTTP data before using it inside another HTTP header.\n\n## Additional information\n\n**[CWE-79](https://cwe.mitre.org/data/definitions/79.html)**\n\n**[OWASP-A7](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A7-Cross-Site_Scripting_(XSS))**."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 293
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/controller/CustomerController.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "CRITICAL"
          },
          "partialFingerprints": {},
          "ruleId": "a7-XSS",
          "ruleIndex": 3
        },
        {
          "message": {
            "markdown": "Data from HTTP request parameters is used in HTML or session information. Unless the string is validated, this may result in a XSS attack.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by using input sanitization/validation techniques (e.g., whitelisting) on the HTTP data before using it inside another HTTP header.\n\n## Additional information\n\n**[CWE-79](https://cwe.mitre.org/data/definitions/79.html)**\n\n**[OWASP-A7](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A7-Cross-Site_Scripting_(XSS))**.",
            "text": "Data from HTTP request parameters is used in HTML or session information. Unless the string is validated, this may result in a XSS attack.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by using input sanitization/validation techniques (e.g., whitelisting) on the HTTP data before using it inside another HTTP header.\n\n## Additional information\n\n**[CWE-79](https://cwe.mitre.org/data/definitions/79.html)**\n\n**[OWASP-A7](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A7-Cross-Site_Scripting_(XSS))**."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 293
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/controller/CustomerController.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "CRITICAL"
          },
          "partialFingerprints": {},
          "ruleId": "a7-XSS",
          "ruleIndex": 3
        },
        {
          "message": {
            "markdown": "Attacker controlled data is deserialized in this flow. An attacker may be able to trick the system into using malicious, potentially harmful data. As a result the attacker may be able to attack the integrity of the system or remotely execute code on the system.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by validating data before it is deserialized.\n\n## Additional information\n\n**[CWE-502](https://cwe.mitre.org/data/definitions/502.html)**\n\n**[OWASP-A8](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A8-Insecure_Deserialization)**.",
            "text": "Attacker controlled data is deserialized in this flow. An attacker may be able to trick the system into using malicious, potentially harmful data. As a result the attacker may be able to attack the integrity of the system or remotely execute code on the system.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by validating data before it is deserialized.\n\n## Additional information\n\n**[CWE-502](https://cwe.mitre.org/data/definitions/502.html)**\n\n**[OWASP-A8](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A8-Insecure_Deserialization)**."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 85
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/controller/AdminController.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "CRITICAL"
          },
          "partialFingerprints": {},
          "ruleId": "a8-deserialization",
          "ruleIndex": 2
        },
        {
          "message": {
            "markdown": "Sensitive data leak detected in this flow. This data may be visible to a third party that has access to the logs, such as system administrators. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by not writing sensitive data to the log or by encrypting it in advance.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[CWE-117](https://cwe.mitre.org/data/definitions/117.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**.",
            "text": "Sensitive data leak detected in this flow. This data may be visible to a third party that has access to the logs, such as system administrators. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by not writing sensitive data to the log or by encrypting it in advance.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[CWE-117](https://cwe.mitre.org/data/definitions/117.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 44
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/model/Account.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "CRITICAL"
          },
          "partialFingerprints": {},
          "ruleId": "a3-sensitive-data-exposure",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "Data from HTTP methods is not escaped, hashed or encoded and used as a file name in this flow. This indicates a directory traversal or an arbitrary file write. Injection flaws occur when untrusted data is sent to an interpreter as part of a command or query. By injecting hostile data, an attacker may trick the interpreter into executing unintended commands or accessing data without authorization which can result in data loss, corruption, or disclosure to unauthorized parties, loss of accountability, denial of access or even a complete host takeover.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by validating HTTP data (preferably on server-side by means of common input sanitation libraries or whitelisting) before using it (e.g., ensure that attackers cannot arbitrarily access files by defining file paths through HTTP requests).\n\n## Additional information\n\n**[CWE-22](https://cwe.mitre.org/data/definitions/22.html)**\n\n**[OWASP-A5](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A5-Broken_Access_Control)**.",
            "text": "Data from HTTP methods is not escaped, hashed or encoded and used as a file name in this flow. This indicates a directory traversal or an arbitrary file write. Injection flaws occur when untrusted data is sent to an interpreter as part of a command or query. By injecting hostile data, an attacker may trick the interpreter into executing unintended commands or accessing data without authorization which can result in data loss, corruption, or disclosure to unauthorized parties, loss of accountability, denial of access or even a complete host takeover.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by validating HTTP data (preferably on server-side by means of common input sanitation libraries or whitelisting) before using it (e.g., ensure that attackers cannot arbitrarily access files by defining file paths through HTTP requests).\n\n## Additional information\n\n**[CWE-22](https://cwe.mitre.org/data/definitions/22.html)**\n\n**[OWASP-A5](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A5-Broken_Access_Control)**."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 223
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/controller/CustomerController.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "CRITICAL"
          },
          "partialFingerprints": {},
          "ruleId": "a5-broken-access-control",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "Sensitive data leak detected in this flow. This data may be visible to a third party that has access to the logs, such as system administrators. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by not writing sensitive data to the log or by encrypting it in advance.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[CWE-117](https://cwe.mitre.org/data/definitions/117.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**.",
            "text": "Sensitive data leak detected in this flow. This data may be visible to a third party that has access to the logs, such as system administrators. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by not writing sensitive data to the log or by encrypting it in advance.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[CWE-117](https://cwe.mitre.org/data/definitions/117.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 43
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/controller/AccountController.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "CRITICAL"
          },
          "partialFingerprints": {},
          "ruleId": "a3-sensitive-data-exposure",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "Sensitive data leak detected in this flow. This data may be visible to a third party that has access to the logs, such as system administrators. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by not writing sensitive data to the log or by encrypting it in advance.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[CWE-117](https://cwe.mitre.org/data/definitions/117.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**.",
            "text": "Sensitive data leak detected in this flow. This data may be visible to a third party that has access to the logs, such as system administrators. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by not writing sensitive data to the log or by encrypting it in advance.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[CWE-117](https://cwe.mitre.org/data/definitions/117.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/repository/AccountRepository.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "CRITICAL"
          },
          "partialFingerprints": {},
          "ruleId": "a3-sensitive-data-exposure",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "Data from HTTP request parameters is used in HTML or session information. Unless the string is validated, this may result in a XSS attack.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by using input sanitization/validation techniques (e.g., whitelisting) on the HTTP data before using it inside another HTTP header.\n\n## Additional information\n\n**[CWE-79](https://cwe.mitre.org/data/definitions/79.html)**\n\n**[OWASP-A7](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A7-Cross-Site_Scripting_(XSS))**.",
            "text": "Data from HTTP request parameters is used in HTML or session information. Unless the string is validated, this may result in a XSS attack.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by using input sanitization/validation techniques (e.g., whitelisting) on the HTTP data before using it inside another HTTP header.\n\n## Additional information\n\n**[CWE-79](https://cwe.mitre.org/data/definitions/79.html)**\n\n**[OWASP-A7](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A7-Cross-Site_Scripting_(XSS))**."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 293
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/controller/CustomerController.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "CRITICAL"
          },
          "partialFingerprints": {},
          "ruleId": "a7-XSS",
          "ruleIndex": 3
        },
        {
          "message": {
            "markdown": "Data from HTTP methods is not escaped, hashed or encoded and used as a file name in this flow. This indicates a directory traversal or an arbitrary file write. Injection flaws occur when untrusted data is sent to an interpreter as part of a command or query. By injecting hostile data, an attacker may trick the interpreter into executing unintended commands or accessing data without authorization which can result in data loss, corruption, or disclosure to unauthorized parties, loss of accountability, denial of access or even a complete host takeover.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by validating HTTP data (preferably on server-side by means of common input sanitation libraries or whitelisting) before using it and by ensuring that the application is running with the access rights (e.g., ensure that attackers cannot arbitrarily write to files that reside on the server).\n\n## Additional information\n\n**[CWE-22](https://cwe.mitre.org/data/definitions/22.html)**\n\n**[OWASP-A5](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A5-Broken_Access_Control)**.",
            "text": "Data from HTTP methods is not escaped, hashed or encoded and used as a file name in this flow. This indicates a directory traversal or an arbitrary file write. Injection flaws occur when untrusted data is sent to an interpreter as part of a command or query. By injecting hostile data, an attacker may trick the interpreter into executing unintended commands or accessing data without authorization which can result in data loss, corruption, or disclosure to unauthorized parties, loss of accountability, denial of access or even a complete host takeover.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by validating HTTP data (preferably on server-side by means of common input sanitation libraries or whitelisting) before using it and by ensuring that the application is running with the access rights (e.g., ensure that attackers cannot arbitrarily write to files that reside on the server).\n\n## Additional information\n\n**[CWE-22](https://cwe.mitre.org/data/definitions/22.html)**\n\n**[OWASP-A5](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A5-Broken_Access_Control)**."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 223
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/controller/CustomerController.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "CRITICAL"
          },
          "partialFingerprints": {},
          "ruleId": "a5-broken-access-control",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "Sensitive data is printed on console in this flow.\n It can be viewed by unauthorized third party with access to it, such as system administrators. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by not printing sensitive data out or by encrypting it in advance.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**.",
            "text": "Sensitive data is printed on console in this flow.\n It can be viewed by unauthorized third party with access to it, such as system administrators. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by not printing sensitive data out or by encrypting it in advance.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 320
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/controller/CustomerController.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "CRITICAL"
          },
          "partialFingerprints": {},
          "ruleId": "a3-sensitive-data-exposure",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "Sensitive data leak detected in this flow. This data may be visible to a third party that has access to the logs, such as system administrators. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by not writing sensitive data to the log or by encrypting it in advance.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[CWE-117](https://cwe.mitre.org/data/definitions/117.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**.",
            "text": "Sensitive data leak detected in this flow. This data may be visible to a third party that has access to the logs, such as system administrators. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by not writing sensitive data to the log or by encrypting it in advance.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[CWE-117](https://cwe.mitre.org/data/definitions/117.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 125
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/controller/CustomerController.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "CRITICAL"
          },
          "partialFingerprints": {},
          "ruleId": "a3-sensitive-data-exposure",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "Data from HTTP request parameters is used in HTML or session information. Unless the string is validated, this may result in a XSS attack.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by using input sanitization/validation techniques (e.g., whitelisting) on the HTTP data before using it inside another HTTP header.\n\n## Additional information\n\n**[CWE-79](https://cwe.mitre.org/data/definitions/79.html)**\n\n**[OWASP-A7](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A7-Cross-Site_Scripting_(XSS))**.",
            "text": "Data from HTTP request parameters is used in HTML or session information. Unless the string is validated, this may result in a XSS attack.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by using input sanitization/validation techniques (e.g., whitelisting) on the HTTP data before using it inside another HTTP header.\n\n## Additional information\n\n**[CWE-79](https://cwe.mitre.org/data/definitions/79.html)**\n\n**[OWASP-A7](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A7-Cross-Site_Scripting_(XSS))**."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 293
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/controller/CustomerController.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "CRITICAL"
          },
          "partialFingerprints": {},
          "ruleId": "a7-XSS",
          "ruleIndex": 3
        },
        {
          "message": {
            "markdown": "Sensitive data leak detected in this flow. This data may be visible to a third party that has access to the logs, such as system administrators. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by not writing sensitive data to the log or by encrypting it in advance.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[CWE-117](https://cwe.mitre.org/data/definitions/117.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**.",
            "text": "Sensitive data leak detected in this flow. This data may be visible to a third party that has access to the logs, such as system administrators. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by not writing sensitive data to the log or by encrypting it in advance.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[CWE-117](https://cwe.mitre.org/data/definitions/117.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/repository/AccountRepository.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "CRITICAL"
          },
          "partialFingerprints": {},
          "ruleId": "a3-sensitive-data-exposure",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "Sensitive data leak detected in this flow. This data may be visible to a third party that has access to the logs, such as system administrators. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by not writing sensitive data to the log or by encrypting it in advance.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[CWE-117](https://cwe.mitre.org/data/definitions/117.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**.",
            "text": "Sensitive data leak detected in this flow. This data may be visible to a third party that has access to the logs, such as system administrators. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by not writing sensitive data to the log or by encrypting it in advance.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[CWE-117](https://cwe.mitre.org/data/definitions/117.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 49
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/controller/AccountController.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "CRITICAL"
          },
          "partialFingerprints": {},
          "ruleId": "a3-sensitive-data-exposure",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "Data from HTTP request parameters is used in HTML or session information. Unless the string is validated, this may result in a XSS attack.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by using input sanitization/validation techniques (e.g., whitelisting) on the HTTP data before using it inside another HTTP header.\n\n## Additional information\n\n**[CWE-79](https://cwe.mitre.org/data/definitions/79.html)**\n\n**[OWASP-A7](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A7-Cross-Site_Scripting_(XSS))**.",
            "text": "Data from HTTP request parameters is used in HTML or session information. Unless the string is validated, this may result in a XSS attack.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by using input sanitization/validation techniques (e.g., whitelisting) on the HTTP data before using it inside another HTTP header.\n\n## Additional information\n\n**[CWE-79](https://cwe.mitre.org/data/definitions/79.html)**\n\n**[OWASP-A7](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A7-Cross-Site_Scripting_(XSS))**."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 57
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/controller/AccountController.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "CRITICAL"
          },
          "partialFingerprints": {},
          "ruleId": "a7-XSS",
          "ruleIndex": 3
        },
        {
          "message": {
            "markdown": "Sensitive data leak detected in this flow. This data may be visible to a third party that has access to the logs, such as system administrators. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by not writing sensitive data to the log or by encrypting it in advance.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[CWE-117](https://cwe.mitre.org/data/definitions/117.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**.",
            "text": "Sensitive data leak detected in this flow. This data may be visible to a third party that has access to the logs, such as system administrators. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by not writing sensitive data to the log or by encrypting it in advance.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[CWE-117](https://cwe.mitre.org/data/definitions/117.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 35
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/controller/AccountController.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "CRITICAL"
          },
          "partialFingerprints": {},
          "ruleId": "a3-sensitive-data-exposure",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "Sensitive data leak detected in this flow. This data may be visible to a third party that has access to the logs, such as system administrators. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by not writing sensitive data to the log or by encrypting it in advance.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[CWE-117](https://cwe.mitre.org/data/definitions/117.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**.",
            "text": "Sensitive data leak detected in this flow. This data may be visible to a third party that has access to the logs, such as system administrators. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by not writing sensitive data to the log or by encrypting it in advance.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[CWE-117](https://cwe.mitre.org/data/definitions/117.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/repository/CustomerRepository.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "CRITICAL"
          },
          "partialFingerprints": {},
          "ruleId": "a3-sensitive-data-exposure",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "Sensitive data leak detected in this flow. This data may be visible to a third party that has access to the logs, such as system administrators. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by not writing sensitive data to the log or by encrypting it in advance.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[CWE-117](https://cwe.mitre.org/data/definitions/117.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**.",
            "text": "Sensitive data leak detected in this flow. This data may be visible to a third party that has access to the logs, such as system administrators. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by not writing sensitive data to the log or by encrypting it in advance.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[CWE-117](https://cwe.mitre.org/data/definitions/117.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 67
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/controller/AccountController.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "CRITICAL"
          },
          "partialFingerprints": {},
          "ruleId": "a3-sensitive-data-exposure",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "Sensitive data leak detected in this flow. This data may be visible to a third party that has access to the logs, such as system administrators. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by not writing sensitive data to the log or by encrypting it in advance.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[CWE-117](https://cwe.mitre.org/data/definitions/117.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**.",
            "text": "Sensitive data leak detected in this flow. This data may be visible to a third party that has access to the logs, such as system administrators. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by not writing sensitive data to the log or by encrypting it in advance.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[CWE-117](https://cwe.mitre.org/data/definitions/117.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 30
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/controller/AccountController.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "CRITICAL"
          },
          "partialFingerprints": {},
          "ruleId": "a3-sensitive-data-exposure",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "Data from HTTP request parameters is used in HTML or session information. Unless the string is validated, this may result in a XSS attack.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by using input sanitization/validation techniques (e.g., whitelisting) on the HTTP data before using it inside another HTTP header.\n\n## Additional information\n\n**[CWE-79](https://cwe.mitre.org/data/definitions/79.html)**\n\n**[OWASP-A7](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A7-Cross-Site_Scripting_(XSS))**.",
            "text": "Data from HTTP request parameters is used in HTML or session information. Unless the string is validated, this may result in a XSS attack.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by using input sanitization/validation techniques (e.g., whitelisting) on the HTTP data before using it inside another HTTP header.\n\n## Additional information\n\n**[CWE-79](https://cwe.mitre.org/data/definitions/79.html)**\n\n**[OWASP-A7](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A7-Cross-Site_Scripting_(XSS))**."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 48
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/controller/AccountController.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "CRITICAL"
          },
          "partialFingerprints": {},
          "ruleId": "a7-XSS",
          "ruleIndex": 3
        },
        {
          "message": {
            "markdown": "Data from HTTP request parameters is used in HTML or session information. Unless the string is validated, this may result in a XSS attack.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by using input sanitization/validation techniques (e.g., whitelisting) on the HTTP data before using it inside another HTTP header.\n\n## Additional information\n\n**[CWE-79](https://cwe.mitre.org/data/definitions/79.html)**\n\n**[OWASP-A7](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A7-Cross-Site_Scripting_(XSS))**.",
            "text": "Data from HTTP request parameters is used in HTML or session information. Unless the string is validated, this may result in a XSS attack.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by using input sanitization/validation techniques (e.g., whitelisting) on the HTTP data before using it inside another HTTP header.\n\n## Additional information\n\n**[CWE-79](https://cwe.mitre.org/data/definitions/79.html)**\n\n**[OWASP-A7](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A7-Cross-Site_Scripting_(XSS))**."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 293
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/controller/CustomerController.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "CRITICAL"
          },
          "partialFingerprints": {},
          "ruleId": "a7-XSS",
          "ruleIndex": 3
        },
        {
          "message": {
            "markdown": "Data from HTTP methods is not escaped, hashed or encoded and used as a file name in this flow. This indicates a directory traversal or an arbitrary file write. Injection flaws occur when untrusted data is sent to an interpreter as part of a command or query. By injecting hostile data, an attacker may trick the interpreter into executing unintended commands or accessing data without authorization which can result in data loss, corruption, or disclosure to unauthorized parties, loss of accountability, denial of access or even a complete host takeover.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by validating HTTP data (preferably on server-side by means of common input sanitation libraries or whitelisting) before using it (e.g., ensure that attackers cannot arbitrarily access files by defining file paths through HTTP requests).\n\n## Additional information\n\n**[CWE-22](https://cwe.mitre.org/data/definitions/22.html)**\n\n**[OWASP-A5](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A5-Broken_Access_Control)**.",
            "text": "Data from HTTP methods is not escaped, hashed or encoded and used as a file name in this flow. This indicates a directory traversal or an arbitrary file write. Injection flaws occur when untrusted data is sent to an interpreter as part of a command or query. By injecting hostile data, an attacker may trick the interpreter into executing unintended commands or accessing data without authorization which can result in data loss, corruption, or disclosure to unauthorized parties, loss of accountability, denial of access or even a complete host takeover.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by validating HTTP data (preferably on server-side by means of common input sanitation libraries or whitelisting) before using it (e.g., ensure that attackers cannot arbitrarily access files by defining file paths through HTTP requests).\n\n## Additional information\n\n**[CWE-22](https://cwe.mitre.org/data/definitions/22.html)**\n\n**[OWASP-A5](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A5-Broken_Access_Control)**."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 223
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/controller/CustomerController.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "CRITICAL"
          },
          "partialFingerprints": {},
          "ruleId": "a5-broken-access-control",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "HTTP Request parameter are deserialized and not escaped. An attacker may be able to trick the system into using malicious, potentially harmful data. As a result the attacker may be able to attack the integrity of the system or remotely execute code on the system.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by validating HTTP data before it is deserialized.\n\n## Additional information\n\n**[CWE-502](https://cwe.mitre.org/data/definitions/502.html)**\n\n**[OWASP-A8](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A8-Insecure_Deserialization)**.",
            "text": "HTTP Request parameter are deserialized and not escaped. An attacker may be able to trick the system into using malicious, potentially harmful data. As a result the attacker may be able to attack the integrity of the system or remotely execute code on the system.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by validating HTTP data before it is deserialized.\n\n## Additional information\n\n**[CWE-502](https://cwe.mitre.org/data/definitions/502.html)**\n\n**[OWASP-A8](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A8-Insecure_Deserialization)**."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 85
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/controller/AdminController.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "CRITICAL"
          },
          "partialFingerprints": {},
          "ruleId": "a8-deserialization",
          "ruleIndex": 2
        },
        {
          "message": {
            "markdown": "Data from HTTP methods is not escaped, hashed or encoded and used as a file name in this flow. This indicates a directory traversal or an arbitrary file write. Injection flaws occur when untrusted data is sent to an interpreter as part of a command or query. By injecting hostile data, an attacker may trick the interpreter into executing unintended commands or accessing data without authorization which can result in data loss, corruption, or disclosure to unauthorized parties, loss of accountability, denial of access or even a complete host takeover.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by validating HTTP data (preferably on server-side by means of common input sanitation libraries or whitelisting) before using it and by ensuring that the application is running with the access rights (e.g., ensure that attackers cannot arbitrarily write to files that reside on the server).\n\n## Additional information\n\n**[CWE-22](https://cwe.mitre.org/data/definitions/22.html)**\n\n**[OWASP-A5](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A5-Broken_Access_Control)**.",
            "text": "Data from HTTP methods is not escaped, hashed or encoded and used as a file name in this flow. This indicates a directory traversal or an arbitrary file write. Injection flaws occur when untrusted data is sent to an interpreter as part of a command or query. By injecting hostile data, an attacker may trick the interpreter into executing unintended commands or accessing data without authorization which can result in data loss, corruption, or disclosure to unauthorized parties, loss of accountability, denial of access or even a complete host takeover.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by validating HTTP data (preferably on server-side by means of common input sanitation libraries or whitelisting) before using it and by ensuring that the application is running with the access rights (e.g., ensure that attackers cannot arbitrarily write to files that reside on the server).\n\n## Additional information\n\n**[CWE-22](https://cwe.mitre.org/data/definitions/22.html)**\n\n**[OWASP-A5](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A5-Broken_Access_Control)**."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 223
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/controller/CustomerController.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "CRITICAL"
          },
          "partialFingerprints": {},
          "ruleId": "a5-broken-access-control",
          "ruleIndex": 4
        },
        {
          "message": {
            "markdown": "Data from HTTP request parameters is used in HTML or session information. Unless the string is validated, this may result in a XSS attack.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by using input sanitization/validation techniques (e.g., whitelisting) on the HTTP data before using it inside another HTTP header.\n\n## Additional information\n\n**[CWE-79](https://cwe.mitre.org/data/definitions/79.html)**\n\n**[OWASP-A7](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A7-Cross-Site_Scripting_(XSS))**.",
            "text": "Data from HTTP request parameters is used in HTML or session information. Unless the string is validated, this may result in a XSS attack.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by using input sanitization/validation techniques (e.g., whitelisting) on the HTTP data before using it inside another HTTP header.\n\n## Additional information\n\n**[CWE-79](https://cwe.mitre.org/data/definitions/79.html)**\n\n**[OWASP-A7](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A7-Cross-Site_Scripting_(XSS))**."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 293
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/controller/CustomerController.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "CRITICAL"
          },
          "partialFingerprints": {},
          "ruleId": "a7-XSS",
          "ruleIndex": 3
        },
        {
          "message": {
            "markdown": "Data from HTTP request parameters is used in HTML or session information. Unless the string is validated, this may result in a XSS attack.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by using input sanitization/validation techniques (e.g., whitelisting) on the HTTP data before using it inside another HTTP header.\n\n## Additional information\n\n**[CWE-79](https://cwe.mitre.org/data/definitions/79.html)**\n\n**[OWASP-A7](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A7-Cross-Site_Scripting_(XSS))**.",
            "text": "Data from HTTP request parameters is used in HTML or session information. Unless the string is validated, this may result in a XSS attack.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by using input sanitization/validation techniques (e.g., whitelisting) on the HTTP data before using it inside another HTTP header.\n\n## Additional information\n\n**[CWE-79](https://cwe.mitre.org/data/definitions/79.html)**\n\n**[OWASP-A7](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A7-Cross-Site_Scripting_(XSS))**."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 293
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/controller/CustomerController.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "CRITICAL"
          },
          "partialFingerprints": {},
          "ruleId": "a7-XSS",
          "ruleIndex": 3
        },
        {
          "message": {
            "markdown": "HTTP Request parameter are deserialized and not escaped. An attacker may be able to trick the system into using malicious, potentially harmful data. As a result the attacker may be able to attack the integrity of the system or remotely execute code on the system.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by validating HTTP data before it is deserialized.\n\n## Additional information\n\n**[CWE-502](https://cwe.mitre.org/data/definitions/502.html)**\n\n**[OWASP-A8](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A8-Insecure_Deserialization)**.",
            "text": "HTTP Request parameter are deserialized and not escaped. An attacker may be able to trick the system into using malicious, potentially harmful data. As a result the attacker may be able to attack the integrity of the system or remotely execute code on the system.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by validating HTTP data before it is deserialized.\n\n## Additional information\n\n**[CWE-502](https://cwe.mitre.org/data/definitions/502.html)**\n\n**[OWASP-A8](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A8-Insecure_Deserialization)**."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "javax/servlet/http/HttpSession.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "CRITICAL"
          },
          "partialFingerprints": {},
          "ruleId": "a8-deserialization",
          "ruleIndex": 2
        },
        {
          "message": {
            "markdown": "Sensitive data leak detected in this flow. This data may be visible to a third party that has access to the logs, such as system administrators. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by not writing sensitive data to the log or by encrypting it in advance.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[CWE-117](https://cwe.mitre.org/data/definitions/117.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**.",
            "text": "Sensitive data leak detected in this flow. This data may be visible to a third party that has access to the logs, such as system administrators. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by not writing sensitive data to the log or by encrypting it in advance.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[CWE-117](https://cwe.mitre.org/data/definitions/117.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 31
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/model/Account.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "CRITICAL"
          },
          "partialFingerprints": {},
          "ruleId": "a3-sensitive-data-exposure",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "Sensitive data leak detected in this flow. This data may be visible to a third party that has access to the logs, such as system administrators. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by not writing sensitive data to the log or by encrypting it in advance.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[CWE-117](https://cwe.mitre.org/data/definitions/117.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**.",
            "text": "Sensitive data leak detected in this flow. This data may be visible to a third party that has access to the logs, such as system administrators. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by not writing sensitive data to the log or by encrypting it in advance.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[CWE-117](https://cwe.mitre.org/data/definitions/117.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/repository/PatientRepository.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "CRITICAL"
          },
          "partialFingerprints": {},
          "ruleId": "a3-sensitive-data-exposure",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "Attacker controlled sensitive data is not escaped and inserted into a database in this flow. This can lead to a stored cross site scripting (XSS) attack. Unescaped javascript is stored in the database and will be send to the client and executed in the browser every time a certain page is requested. This can result in stealing sessions and maybe credentials of the user.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by escaping data before returned to the user.",
            "text": "Attacker controlled sensitive data is not escaped and inserted into a database in this flow. This can lead to a stored cross site scripting (XSS) attack. Unescaped javascript is stored in the database and will be send to the client and executed in the browser every time a certain page is requested. This can result in stealing sessions and maybe credentials of the user.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by escaping data before returned to the user."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 346
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/controller/CustomerController.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "MEDIUM"
          },
          "partialFingerprints": {},
          "ruleId": "a3-cross-site-scripting",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "Attacker controlled sensitive data is not escaped and inserted into a database in this flow. This can lead to a stored cross site scripting (XSS) attack. Unescaped javascript is stored in the database and will be send to the client and executed in the browser every time a certain page is requested. This can result in stealing sessions and maybe credentials of the user.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by escaping data before returned to the user.",
            "text": "Attacker controlled sensitive data is not escaped and inserted into a database in this flow. This can lead to a stored cross site scripting (XSS) attack. Unescaped javascript is stored in the database and will be send to the client and executed in the browser every time a certain page is requested. This can result in stealing sessions and maybe credentials of the user.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by escaping data before returned to the user."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 293
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/controller/CustomerController.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "MEDIUM"
          },
          "partialFingerprints": {},
          "ruleId": "a3-cross-site-scripting",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "Attacker controlled sensitive data is not escaped and inserted into a database in this flow. This can lead to a stored cross site scripting (XSS) attack. Unescaped javascript is stored in the database and will be send to the client and executed in the browser every time a certain page is requested. This can result in stealing sessions and maybe credentials of the user.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by escaping data before returned to the user.",
            "text": "Attacker controlled sensitive data is not escaped and inserted into a database in this flow. This can lead to a stored cross site scripting (XSS) attack. Unescaped javascript is stored in the database and will be send to the client and executed in the browser every time a certain page is requested. This can result in stealing sessions and maybe credentials of the user.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by escaping data before returned to the user."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 293
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/controller/CustomerController.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "MEDIUM"
          },
          "partialFingerprints": {},
          "ruleId": "a3-cross-site-scripting",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "HTTP data is used as session attribute without undergoing escaping or validation. Injection flaws occur when untrusted data is sent to an interpreter as part of a command or query. By injecting hostile data, an attacker may trick the interpreter into executing unintended commands or accessing data without authorization which can result in data loss, corruption, or disclosure to unauthorized parties, loss of accountability, denial of access or even a complete host takeover.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by sanitizing and validating the HTTP data before storing it as session attribute.\n\n## Additional information\n\n**[CWE-384](https://cwe.mitre.org/data/definitions/384.html)**\n\n**[OWASP-A2](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A2-Broken_Authentication)**.",
            "text": "HTTP data is used as session attribute without undergoing escaping or validation. Injection flaws occur when untrusted data is sent to an interpreter as part of a command or query. By injecting hostile data, an attacker may trick the interpreter into executing unintended commands or accessing data without authorization which can result in data loss, corruption, or disclosure to unauthorized parties, loss of accountability, denial of access or even a complete host takeover.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by sanitizing and validating the HTTP data before storing it as session attribute.\n\n## Additional information\n\n**[CWE-384](https://cwe.mitre.org/data/definitions/384.html)**\n\n**[OWASP-A2](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A2-Broken_Authentication)**."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 85
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/controller/AdminController.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "MEDIUM"
          },
          "partialFingerprints": {},
          "ruleId": "a2-broken-authentication",
          "ruleIndex": 6
        },
        {
          "message": {
            "markdown": "Attacker controlled sensitive data is not escaped and inserted into a database in this flow. This can lead to a stored cross site scripting (XSS) attack. Unescaped javascript is stored in the database and will be send to the client and executed in the browser every time a certain page is requested. This can result in stealing sessions and maybe credentials of the user.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by escaping data before returned to the user.",
            "text": "Attacker controlled sensitive data is not escaped and inserted into a database in this flow. This can lead to a stored cross site scripting (XSS) attack. Unescaped javascript is stored in the database and will be send to the client and executed in the browser every time a certain page is requested. This can result in stealing sessions and maybe credentials of the user.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by escaping data before returned to the user."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 293
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/controller/CustomerController.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "MEDIUM"
          },
          "partialFingerprints": {},
          "ruleId": "a3-cross-site-scripting",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "Attacker controlled sensitive data is not escaped and inserted into a database in this flow. This can lead to a stored cross site scripting (XSS) attack. Unescaped javascript is stored in the database and will be send to the client and executed in the browser every time a certain page is requested. This can result in stealing sessions and maybe credentials of the user.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by escaping data before returned to the user.",
            "text": "Attacker controlled sensitive data is not escaped and inserted into a database in this flow. This can lead to a stored cross site scripting (XSS) attack. Unescaped javascript is stored in the database and will be send to the client and executed in the browser every time a certain page is requested. This can result in stealing sessions and maybe credentials of the user.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by escaping data before returned to the user."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 364
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/controller/CustomerController.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "MEDIUM"
          },
          "partialFingerprints": {},
          "ruleId": "a3-cross-site-scripting",
          "ruleIndex": 5
        },
        {
          "message": {
            "markdown": "Environment data leak detected as part of this flow. Environmental data is sent out through a HTTP request. This is a potential data leakage. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by ensuring that the environmental data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**.",
            "text": "Environment data leak detected as part of this flow. Environmental data is sent out through a HTTP request. This is a potential data leakage. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by ensuring that the environmental data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "org/springframework/core/env/Environment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "MEDIUM"
          },
          "partialFingerprints": {},
          "ruleId": "a3-sensitive-data-exposure",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "Information about the configuration of the environment is exposed via HTTP. This information is potentially valuable for attackers in order to craft more targeted attacks. Many web applications and APIs do not protect sensitive data, such as database access keys or encryption keys. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by encrypting environment data.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**.",
            "text": "Information about the configuration of the environment is exposed via HTTP. This information is potentially valuable for attackers in order to craft more targeted attacks. Many web applications and APIs do not protect sensitive data, such as database access keys or encryption keys. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by encrypting environment data.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "org/springframework/core/env/Environment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "MEDIUM"
          },
          "partialFingerprints": {},
          "ruleId": "a3-sensitive-data-exposure",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "Sensitive database data is written to log in this flow. This data may be visible to a third party that has access to the logs, such as system administrators. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by not writing sensitive data to the log or by encrypting it in advance.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[CWE-117](https://cwe.mitre.org/data/definitions/117.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**.",
            "text": "Sensitive database data is written to log in this flow. This data may be visible to a third party that has access to the logs, such as system administrators. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by not writing sensitive data to the log or by encrypting it in advance.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[CWE-117](https://cwe.mitre.org/data/definitions/117.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/repository/AccountRepository.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "MEDIUM"
          },
          "partialFingerprints": {},
          "ruleId": "a3-sensitive-data-exposure",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "Sensitive database data is written to log in this flow. This data may be visible to a third party that has access to the logs, such as system administrators. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by not writing sensitive data to the log or by encrypting it in advance.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[CWE-117](https://cwe.mitre.org/data/definitions/117.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**.",
            "text": "Sensitive database data is written to log in this flow. This data may be visible to a third party that has access to the logs, such as system administrators. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by not writing sensitive data to the log or by encrypting it in advance.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[CWE-117](https://cwe.mitre.org/data/definitions/117.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/repository/AccountRepository.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "MEDIUM"
          },
          "partialFingerprints": {},
          "ruleId": "a3-sensitive-data-exposure",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "Sensitive database data is written to log in this flow. This data may be visible to a third party that has access to the logs, such as system administrators. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by not writing sensitive data to the log or by encrypting it in advance.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[CWE-117](https://cwe.mitre.org/data/definitions/117.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**.",
            "text": "Sensitive database data is written to log in this flow. This data may be visible to a third party that has access to the logs, such as system administrators. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by not writing sensitive data to the log or by encrypting it in advance.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[CWE-117](https://cwe.mitre.org/data/definitions/117.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/repository/PatientRepository.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "MEDIUM"
          },
          "partialFingerprints": {},
          "ruleId": "a3-sensitive-data-exposure",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**.",
            "text": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 20
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/model/Customer.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "LOW"
          },
          "partialFingerprints": {},
          "ruleId": "a3-sensitive-data-exposure",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**.",
            "text": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 13
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/model/Address.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "LOW"
          },
          "partialFingerprints": {},
          "ruleId": "a3-sensitive-data-exposure",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**.",
            "text": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 44
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/model/Account.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "LOW"
          },
          "partialFingerprints": {},
          "ruleId": "a3-sensitive-data-exposure",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**.",
            "text": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 20
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/model/Customer.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "LOW"
          },
          "partialFingerprints": {},
          "ruleId": "a3-sensitive-data-exposure",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**.",
            "text": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 20
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/model/Customer.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "LOW"
          },
          "partialFingerprints": {},
          "ruleId": "a3-sensitive-data-exposure",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**.",
            "text": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 20
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/model/Customer.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "LOW"
          },
          "partialFingerprints": {},
          "ruleId": "a3-sensitive-data-exposure",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**.",
            "text": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 13
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/model/Address.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "LOW"
          },
          "partialFingerprints": {},
          "ruleId": "a3-sensitive-data-exposure",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**.",
            "text": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 120
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/controller/CustomerController.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "LOW"
          },
          "partialFingerprints": {},
          "ruleId": "a3-sensitive-data-exposure",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**.",
            "text": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/repository/AccountRepository.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "LOW"
          },
          "partialFingerprints": {},
          "ruleId": "a3-sensitive-data-exposure",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**.",
            "text": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 293
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/controller/CustomerController.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "LOW"
          },
          "partialFingerprints": {},
          "ruleId": "a3-sensitive-data-exposure",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**.",
            "text": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 346
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/controller/CustomerController.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "LOW"
          },
          "partialFingerprints": {},
          "ruleId": "a3-sensitive-data-exposure",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**.",
            "text": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 20
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/model/Customer.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "LOW"
          },
          "partialFingerprints": {},
          "ruleId": "a3-sensitive-data-exposure",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**.",
            "text": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 293
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/controller/CustomerController.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "LOW"
          },
          "partialFingerprints": {},
          "ruleId": "a3-sensitive-data-exposure",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**.",
            "text": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 20
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/model/Customer.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "LOW"
          },
          "partialFingerprints": {},
          "ruleId": "a3-sensitive-data-exposure",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**.",
            "text": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/repository/CustomerRepository.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "LOW"
          },
          "partialFingerprints": {},
          "ruleId": "a3-sensitive-data-exposure",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**.",
            "text": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 20
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/model/Customer.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "LOW"
          },
          "partialFingerprints": {},
          "ruleId": "a3-sensitive-data-exposure",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**.",
            "text": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 29
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/controller/AccountController.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "LOW"
          },
          "partialFingerprints": {},
          "ruleId": "a3-sensitive-data-exposure",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**.",
            "text": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/repository/AccountRepository.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "LOW"
          },
          "partialFingerprints": {},
          "ruleId": "a3-sensitive-data-exposure",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "HTTP data is written to a log file in this flow. This data may be visible to a third party that has access to the logs, such as system administrators. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by not writing HTTP data directly to the log or by encrypting it in advance.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[CWE-117](https://cwe.mitre.org/data/definitions/117.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**.",
            "text": "HTTP data is written to a log file in this flow. This data may be visible to a third party that has access to the logs, such as system administrators. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\nThis vulnerability can be prevented by not writing HTTP data directly to the log or by encrypting it in advance.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[CWE-117](https://cwe.mitre.org/data/definitions/117.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 57
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/controller/AccountController.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "LOW"
          },
          "partialFingerprints": {},
          "ruleId": "a3-sensitive-data-exposure",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**.",
            "text": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 13
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/model/Address.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "LOW"
          },
          "partialFingerprints": {},
          "ruleId": "a3-sensitive-data-exposure",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**.",
            "text": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/repository/AccountRepository.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "LOW"
          },
          "partialFingerprints": {},
          "ruleId": "a3-sensitive-data-exposure",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**.",
            "text": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 35
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/controller/AccountController.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "LOW"
          },
          "partialFingerprints": {},
          "ruleId": "a3-sensitive-data-exposure",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**.",
            "text": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 48
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/controller/AccountController.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "LOW"
          },
          "partialFingerprints": {},
          "ruleId": "a3-sensitive-data-exposure",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**.",
            "text": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 120
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/controller/CustomerController.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "LOW"
          },
          "partialFingerprints": {},
          "ruleId": "a3-sensitive-data-exposure",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**.",
            "text": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 20
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/model/Customer.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "LOW"
          },
          "partialFingerprints": {},
          "ruleId": "a3-sensitive-data-exposure",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**.",
            "text": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/repository/CustomerRepository.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "LOW"
          },
          "partialFingerprints": {},
          "ruleId": "a3-sensitive-data-exposure",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**.",
            "text": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 293
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/controller/CustomerController.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "LOW"
          },
          "partialFingerprints": {},
          "ruleId": "a3-sensitive-data-exposure",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**.",
            "text": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 20
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/model/Customer.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "LOW"
          },
          "partialFingerprints": {},
          "ruleId": "a3-sensitive-data-exposure",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**.",
            "text": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 320
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/controller/CustomerController.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "LOW"
          },
          "partialFingerprints": {},
          "ruleId": "a3-sensitive-data-exposure",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**.",
            "text": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 57
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/controller/AccountController.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "LOW"
          },
          "partialFingerprints": {},
          "ruleId": "a3-sensitive-data-exposure",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**.",
            "text": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 293
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/controller/CustomerController.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "LOW"
          },
          "partialFingerprints": {},
          "ruleId": "a3-sensitive-data-exposure",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**.",
            "text": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 20
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/model/Customer.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "LOW"
          },
          "partialFingerprints": {},
          "ruleId": "a3-sensitive-data-exposure",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**.",
            "text": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 293
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/controller/CustomerController.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "LOW"
          },
          "partialFingerprints": {},
          "ruleId": "a3-sensitive-data-exposure",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**.",
            "text": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 293
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/controller/CustomerController.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "LOW"
          },
          "partialFingerprints": {},
          "ruleId": "a3-sensitive-data-exposure",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**.",
            "text": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/repository/AccountRepository.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "LOW"
          },
          "partialFingerprints": {},
          "ruleId": "a3-sensitive-data-exposure",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**.",
            "text": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 26
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/model/Account.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "LOW"
          },
          "partialFingerprints": {},
          "ruleId": "a3-sensitive-data-exposure",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**.",
            "text": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 293
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/controller/CustomerController.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "LOW"
          },
          "partialFingerprints": {},
          "ruleId": "a3-sensitive-data-exposure",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**.",
            "text": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 20
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/model/Customer.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "LOW"
          },
          "partialFingerprints": {},
          "ruleId": "a3-sensitive-data-exposure",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**.",
            "text": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 20
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/model/Customer.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "LOW"
          },
          "partialFingerprints": {},
          "ruleId": "a3-sensitive-data-exposure",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**.",
            "text": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 296
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/controller/CustomerController.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "LOW"
          },
          "partialFingerprints": {},
          "ruleId": "a3-sensitive-data-exposure",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**.",
            "text": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/repository/CustomerRepository.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "LOW"
          },
          "partialFingerprints": {},
          "ruleId": "a3-sensitive-data-exposure",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**.",
            "text": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/repository/CustomerRepository.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "LOW"
          },
          "partialFingerprints": {},
          "ruleId": "a3-sensitive-data-exposure",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**.",
            "text": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 40
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/model/Account.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "LOW"
          },
          "partialFingerprints": {},
          "ruleId": "a3-sensitive-data-exposure",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**.",
            "text": "Sensitive data included in HTTP request/response. This could result in sensitive data exposure. Many web applications and APIs do not protect sensitive data, such as financial and healthcare. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes.\n\n\n## Countermeasures\n\n This vulnerability can be prevented by ensuring that sensitive data is encrypted/hashed with strong up-to-date standard algorithms.\n\n## Additional information\n\n**[CWE-200](https://cwe.mitre.org/data/definitions/200.html)**\n\n**[OWASP-A3](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure)**."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": ""
                  },
                  "startLine": 293
                },
                "artifactLocation": {
                  "uri": "io/shiftleft/controller/CustomerController.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": ""
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "LOW"
          },
          "partialFingerprints": {},
          "ruleId": "a3-sensitive-data-exposure",
          "ruleIndex": 1
        }
      ],
      "automationDetails": {
        "description": {
          "text": "Static Analysis Security Test results using @ShiftLeft/sast-scan"
        },
        "guid": "9ef1387f-097f-428c-b326-61cc1e7e6df0"
      },
      "versionControlProvenance": [
        {
          "branch": "master",
          "repositoryUri": "https://github.com/ShiftLeftSecurity/HelloShiftLeft",
          "revisionId": "34012be2ce64b2bddff9b1a745440ef0b2a9afb3"
        }
      ]
    }
  ],
  "version": "2.1.0",
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "inlineExternalProperties": [
    {
      "guid": "9ef1387f-097f-428c-b326-61cc1e7e6df0",
      "runGuid": "f13c3a8a-5999-4ec6-a23c-3ffba0635c56"
    }
  ]
}